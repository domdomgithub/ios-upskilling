DESIGN PATTERNS

creational patterns
involve patterns of instantiating objects

singleton
only 1 instance allowed, can be shared with reference to instance by others

prototype
create object by copying existing
deep or shallow copy factors
copy on write for primitive

builder
create complex objects under a certain order/algorithm
have 'director' class to control this process
product/builder/concretebuilder

factory
create objects without specific 'type'.
allows type to be determined at run time
base/concrete

abstract factory
provide client with suite of factory created objects determined at run time
abstract factory generate new set of related objects
concrete factory inherit abstract factory, genereate specific objects
abstract product base for types of object
concrete product contains specific functionality, generated by abstract factory to client
http://www.blackwasp.co.uk/AbstractFactory.aspx








structural patterns
define relationship between classes/objects


behavioural patterns
defines communication between classes/objects